// import React, { useState } from "react";

// interface EventDetailProps {
//   eventName: string;
//   eventImage: string;
//   eventLocation: string;
//   eventDateTime: string;
//   eventTags: string[];
//   ticketPrice: string;
// }

// const EventDetail: React.FC<EventDetailProps> = ({
//   eventName,
//   eventImage,
//   eventLocation,
//   eventDateTime,
//   eventTags,
//   ticketPrice,
// }) => {
//   const [ticketAmount, setTicketAmount] = useState<number>(1);

//   const handleTicketAmountChange = (amount: number) => {
//     // Ensure that ticket amount is not less than 1
//     setTicketAmount((prev) => Math.max(x1, prev + amount));
//   };

//   return (
//     <div className="flex flex-col md:flex-row p-6">
//       <div className="flex-1">
//         <img src={eventImage} alt={eventName} className="rounded-lg mb-4" />
//         <h1 className="text-2xl font-bold mb-2">{eventName}</h1>
//         <p className="text-gray-600 mb-2">{eventLocation}</p>
//         <p className="text-gray-600 mb-2">{eventDateTime}</p>
//         <div className="mb-4">
//           {eventTags.map((tag) => (
//             <span
//               key={tag} // Assuming each tag is unique
//               className="inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2"
//             >
//               {tag}
//             </span>
//           ))}
//         </div>
//         <h2 className="text-xl font-semibold mb-2">About this event</h2>
//         {/* Add your event description here */}
//       </div>
//       <div className="flex-1">
//         <div className="bg-gray-100 p-6 rounded-lg shadow-lg">
//           <h3 className="text-lg font-semibold mb-2">Tickets</h3>
//           <div className="flex items-center mb-4">
//             <button
//               onClick={() => handleTicketAmountChange(-1)}
//               className="text-gray-500 focus:outline-none focus:bg-gray-300 p-2 rounded-l-md"
//               disabled={ticketAmount <= 1}
//               aria-label="Decrease ticket amount"
//             >
//               -
//             </button>
//             <span className="flex items-center justify-center bg-white text-black mx-2 p-2">
//               {ticketAmount}
//             </span>
//             <button
//               onClick={() => handleTicketAmountChange(1)}
//               className="text-gray-500 focus:outline-none focus:bg-gray-300 p-2 rounded-r-md"
//               aria-label="Increase ticket amount"
//             >
//               +
//             </button>
//           </div>
//           <div className="flex justify-between items-center mb-4">
//             <span className="text-gray-800 font-bold">
//               {new Intl.NumberFormat("en-US", {
//                 style: "currency",
//                 currency: "USD",
//               }).format(parseFloat(ticketPrice))}
//             </span>
//             <button className="bg-orange-500 text-white px-4 py-2 rounded-lg">
//               Add Cart
//             </button>
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };
// export default EventDetail;

import React, { useState } from "react";
import { Event } from "@/types/event";
import EventCard from "@/components/Discover_Event/shared/EventCard";
const EventDetail: React.FC = () => {
  // Event details hardcoded directly into the component
  // const eventName = "Summer Music Festival";
  // const eventImage =
  //   "https://cluecho.com/wp-content/uploads/2023/04/NCT-DREAM_THE-DREAM-SHOW2_-In-A-DREAM_Newark-Image-3-900x600.jpg";
  // const eventLocation = "Central Park, New York City";
  // const eventDateTime = "2024-07-16T20:00:00";
  const eventTags = ["Music", "Festival", "Summer", "Live"];
  const ticketPrice = "59.99";

  const [ticketAmount, setTicketAmount] = useState<number>(1);

  const handleTicketAmountChange = (amount: number) => {
    // Ensure that ticket amount is not less than 1
    setTicketAmount((prev) => Math.max(1, prev + amount));
  };

  return (
    <div className="flex flex-col md:flex-row p-6">
      <div className="flex-1">
        <img
          src={event.imageUrls}
          alt={event.title}
          className="rounded-lg mb-4"
        />
        <h1 className="text-2xl font-bold mb-2">{event.title}</h1>
        <p className="text-gray-600 mb-2">{event.location}</p>
        <p className="text-gray-600 mb-2">{event.startTime}</p>
        <p className="text-gray-600 mb-2">{event.endTime}</p>
        <div className="mb-4">
          {eventTags.map((tag) => (
            <span
              key={event.id}
              className="inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2"
            >
              {tag}
            </span>
          ))}
        </div>
        <h2 className="text-xl font-semibold mb-2">About this event</h2>
        <p>{event.description}</p>
      </div>
      <div className="flex-1">
        <div className="bg-gray-100 p-6 rounded-lg shadow-lg">
          <h3 className="text-lg font-semibold mb-2">Tickets</h3>
          <div className="flex items-center mb-4">
            <button
              onClick={() => handleTicketAmountChange(-1)}
              className="text-gray-500 focus:outline-none focus:bg-gray-300 p-2 rounded-l-md"
              disabled={ticketAmount <= 1}
              aria-label="Decrease ticket amount"
            >
              -
            </button>
            <span className="flex items-center justify-center bg-white text-black mx-2 p-2">
              {ticketAmount}
            </span>
            <button
              onClick={() => handleTicketAmountChange(1)}
              className="text-gray-500 focus:outline-none focus:bg-gray-300 p-2 rounded-r-md"
              aria-label="Increase ticket amount"
            >
              +
            </button>
          </div>
          <div className="flex justify-between items-center mb-4">
            <span className="text-gray-800 font-bold">
              {new Intl.NumberFormat("en-US", {
                style: "currency",
                currency: "USD",
              }).format(parseFloat(ticketPrice))}
            </span>
            <button className="bg-orange-500 text-white px-4 py-2 rounded-lg">
              Add to Cart
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default EventDetail;
